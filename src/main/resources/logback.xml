<?xml version="1.0" encoding="UTF8"?>

<configuration>

	<substitutionProperty name="max.size" value="100MB" />
	<contextName>pika-txt</contextName>
	<jmxConfigurator />

	<appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>[%date{yyyy-MM-dd HH:mm:ss.SSS}][%level][%thread][%logger{80}|%method|%line]%msg%n</pattern>
		</layout>
	</appender>

	<appender name="file.info" class="ch.qos.logback.core.rolling.RollingFileAppender"><!-- All Log Info -->
		<File>logs/info.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>logs/bak_info_%d{yyyy-MM-dd}.%i.log.zip
			</FileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<MaxHistory>30</MaxHistory>
		</rollingPolicy>
		<encoder>
			<immediateFlush>false</immediateFlush>
			<pattern>[%date{yyyy-MM-dd HH:mm:ss.SSS}][%level][%thread][%logger{16}|%line]%msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>
	<appender name="file.decision" class="ch.qos.logback.core.rolling.RollingFileAppender"><!-- All Log Info -->
		<File>logs/decision.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>logs/bak_decision_%d{yyyy-MM-dd}.%i.log.zip
			</FileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<MaxHistory>10</MaxHistory>
		</rollingPolicy>
		<encoder>
			<immediateFlush>false</immediateFlush>
			<pattern>[%date{yyyy-MM-dd HH:mm:ss.SSS}][%level][%thread][%logger{16}|%line]%msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level>
		</filter>
	</appender>
	<appender name="file.cost" class="ch.qos.logback.core.rolling.RollingFileAppender"><!-- All Log Info -->
		<File>logs/cost.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>logs/bak_cost_%d{yyyy-MM-dd}.%i.log.zip
			</FileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<MaxHistory>10</MaxHistory>
		</rollingPolicy>
		<encoder>
			<immediateFlush>false</immediateFlush>
			<pattern>[%date{yyyy-MM-dd HH:mm:ss.SSS}][%level][%thread][%logger{16}|%line]%msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level>
		</filter>
	</appender>

	<appender name="file.warn" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>logs/warn.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>logs/bak_warn_%d{yyyy-MM-dd}.%i.log.zip
			</FileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<MaxHistory>30</MaxHistory>
		</rollingPolicy>
		<encoder>
			<immediateFlush>false</immediateFlush>
			<pattern>[%date{yyyy-MM-dd HH:mm:ss.SSS}][%level][%thread][%logger|%method|%line]%msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>WARN</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<appender name="file.error" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>logs/error.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>logs/bak_error_%d{yyyy-MM-dd}.%i.log.zip
			</FileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<MaxHistory>60</MaxHistory>
		</rollingPolicy>
		<encoder>
			<immediateFlush>true</immediateFlush>
			<pattern>[%date{yyyy-MM-dd HH:mm:ss.SSS}][%level][%thread][%logger|%method|%line]%msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>


	<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
	<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
	<!-- 添加附加的appender,最多只能添加一个 -->
	<appender name="file.info.async" class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>512</queueSize>
		<includeCallerData>true</includeCallerData>
		<appender-ref ref="file.info" />
	</appender>
	<appender name="file.decision.async" class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>512</queueSize>
		<includeCallerData>true</includeCallerData>
		<appender-ref ref="file.decision" />
	</appender>
	<appender name="file.cost.async" class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>512</queueSize>
		<includeCallerData>true</includeCallerData>
		<appender-ref ref="file.cost" />
	</appender>
	<appender name="file.warn.async" class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>512</queueSize>
		<includeCallerData>true</includeCallerData>
		<appender-ref ref="file.warn" />
	</appender>
	<appender name="file.error.async" class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>512</queueSize>
		<includeCallerData>true</includeCallerData>
		<appender-ref ref="file.error" />
	</appender>


	<root level="INFO">
		<appender-ref ref="stdout" />
		<appender-ref ref="file.info.async" />
		<appender-ref ref="file.warn.async" />
		<appender-ref ref="file.error.async" />
		<appender-ref ref="kafka.async" />
	</root>

</configuration>

